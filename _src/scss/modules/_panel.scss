$panel-expand-duration: 0.35s;

$panel-width: 4500;
$panel-expand-scale: (20/ $panel-width);
$panel-width: $panel-width * 1px;

$panel-width--large: 420 + 80;
$panel-expand-scale--large: (50 / $panel-width--large);
$panel-width--large: $panel-width--large * 1px;	

$panel-width--larger: 420 + 160;
$panel-expand-scale--larger: (50 / $panel-width--larger);
$panel-width--larger: $panel-width--larger * 1px;	

$panel-width--largest: 420 + 240;
$panel-expand-scale--largest: (50 / $panel-width--largest);
$panel-width--largest: $panel-width--largest * 1px;	

  @media (max-width: 570px) { 
	.panel {
		width: 100vh !important;
	}

	.panel-content {
		width: 50% !important;
		height: 120% !important;
		padding-bottom: 150px !important;
	}
	#panels-nav {
		display: none !important;
	}
  }


#panels-nav {
		display: none !important;
	}

	#red{
		font-size: 55px !important;
	}

.panel {

	display: block;
	position: relative;
	overflow: hidden;
	width: 100%;
	color: white;
	text-decoration: none;
	transition: transform 0.35s ease-out;

	&:before,
	&:after {
		position: absolute;
		z-index: 3;
		top: 0;
		bottom: 0;
		width: 50%;
		background-color: rgba(0, 0, 0, 0.55);
		opacity: 0;
		transform: scaleX(1) translate3d(0, 0, 0);
		transition: opacity $panel-expand-duration, transform $panel-expand-duration;

		.is-hovered & {
			opacity: 1;
		}
	}

	&:before {
		left: 0;
		transform-origin: 100% 0;
	}

	&:after {
		right: 0;
		transform-origin: 0 0;
	}

	@include breakpoint-mediaquery(horizontal) {
		overflow: visible;
		width: $panel-width;

		&.is-expanded {
			&:before,
			&:after {
				opacity: 0;
				transform: scaleX(1.5 + $panel-expand-scale) translate3d(0, 0, 0);
			}
		}

		&.is-shrunk-left {
			&:after {
				transform: scaleX(1 - $panel-expand-scale) translate3d(0, 0, 0.1%);
			}

			.is-transition-topostfrompanels & {
				width: $panel-width - ($panel-width * $panel-expand-scale * 0.5);
				margin-right: $panel-width * $panel-expand-scale * 0.5;

				&:after {
					transform: scaleX(1) translate3d(0, 0, 0);
					transition: none;
				}
			}
		}

		&.is-shrunk-right {
			&:before {
				transform: scaleX(1 - $panel-expand-scale) translate3d(0, 0, 0.1%);
			}

			.is-transition-topostfrompanels & {
				width: $panel-width - ($panel-width * $panel-expand-scale * 0.5);
				margin-left: $panel-width * $panel-expand-scale * 0.5;

				&:before {
					transform: scaleX(1) translate3d(0, 0, 0);
					transition: none;
				}
			}
		}

		.is-introtransition &,
		.is-transition-panelsbelow & {
			transition: transform 0.5s ease-in-out 0.1s;

			@for $i from 2 through 10 {
				&:nth-child(#{$i}) {
					transition-delay: (0.1s + (0.05 * $i));
				}
			}
		}

		.js .is-intro.is-panels &,
		.is-hidebelow & {
			transform: translateY(100%);
		}

		.is-transition-topostfrompanels & {
			transition: transform 0.35s ease-out;
			transition-delay: 0s;
		}

		.is-transition-topanelsfrompost & {
			transition: none;
		}

		&:before,
		&:after {
			content: "";
		}
	}
}

.panel-content {
	display: absolute;
	z-index: 1;
	width: 100%;
	height: 100%;
	padding: 32px 30px 72px;
	font-size: 9px;
	background-color: inherit;
	transition: opacity 0.3s;

	&:before,
	&:after {
		position: absolute;
		z-index: 1;
		top: 0;
		bottom: 0;
		width: 50%;
		background-color: inherit;
		transform: scaleX(1) translate3d(0, 0, 0);
		transition: transform $panel-expand-duration;

		.is-expanded & {
			transform: scaleX(1 + $panel-expand-scale) translate3d(0, 0, 0);
		}
	}

	&:before {
		left: 0;
		transform-origin: 100% 0;

		.is-shrunk-right & {
			transform: scaleX(1 - $panel-expand-scale) translate3d(0, 0, 0);
		}
	}

	&:after {
		right: 0;
		transform-origin: 0 0;

		.is-shrunk-left & {
			transform: scaleX(1 - $panel-expand-scale) translate3d(0, 0, 0);
		}
	}

	.no-touch & {
		padding-bottom: 100px;

		@include breakpoint-mediaquery(horizontal) {
			padding-bottom: 0;
		}
	}

	@include breakpoint-mediaquery(horizontal) {
		padding: 47px 40px 0;
		font-size: 10px;

		&:before,
		&:after {
			content: "";
		}

		.is-transition-topostfrompanels .is-expanded & {
			opacity: 0;
		}

		.is-transition-topanelsfrompost .is-transition-panel & {
			opacity: 0;
			transition: none;
		}

		.is-transition-topostfrompanels .is-shrunk-left & {
			padding-right: 40px - ($panel-width * $panel-expand-scale * 0.5);
		}

		.is-transition-topostfrompanels .is-shrunk-right & {
			padding-left: 40px - ($panel-width * $panel-expand-scale * 0.5);
		}
	}
	.panel-callouts {
		height: 10em;
		margin-bottom: 32px;
		width: 100%;
		position: relative;
		display: -webkit-flex;
		display: -ms-flexbox;
		display: -ms-flex;
		display: flex;
		-webkit-flex-direction: row;
		-ms-flex-direction: row;
		flex-direction: row;
		-webkit-justify-content: flex-start;
		-ms-justify-content: flex-start;
		justify-content: flex-start;

		.panel-callout {
			display: -webkit-flex;
			display: -ms-flexbox;
			display: -ms-flex;
			display: flex;
			-webkit-flex-direction: column-reverse;
			-ms-flex-direction: column-reverse;
			flex-direction: column-reverse;
			height: 10em;
			width: 100%;
			margin-right: 3em;
			-webkit-justify-content: flex-end;
			-ms-justify-content: flex-end;
			justify-content: flex-end;
			-webkit-align-items: center;
			-ms-align-items: center;
			align-items: center;

			.panel-callout-sq {
				text-align: left;
				z-index: 2;
				color: #FFF;
				font-weight: 200;
				font-size: 6em;
				letter-spacing: -3px;
			}

			.panel-callout-text {
				color: #FFF;
				z-index: 2;
				text-align: center;
				margin-right: 3px;
				text-transform: lowercase;
				font-size: 1.1em;
			}

			&:first-child {
				// margin-right: 12px;
			}

			&:last-child {
				height: auto;
				width: auto;
				margin: 0;

				.panel-callout-sq span {
				    opacity: 0.06;
				    color: black;
				    font-size: 7em;
				    font-weight: 300;
				    position: absolute;
				    left: 32px;
				    top: 280px;

				    .panel--larger & {
				    	left: 60px;
				    }
				    
				    .panel--largest & {
				    	left: 80px;
				    }

				}

				.panel-callout-text {
					text-transform: initial;
					font-size: 1.5em;
				}
			}
		}
	}

	.panel-totals {
		display: -webkit-flex;
		display: -ms-flexbox;
		display: -ms-flex;
		display: flex;
		-webkit-flex-direction: column;
		-ms-flex-direction: column;
		flex-direction: column;

		&:first-child {
			// margin-top: 24px;
		}

		.panel-total {
			display: -webkit-flex;
			display: -ms-flexbox;
			display: -ms-flex;
			display: flex;
			-webkit-flex-direction: row;
			-ms-flex-direction: row;
			flex-direction: row;
			-webkit-align-items: baseline;
			-ms-align-items: baseline;
			align-items: baseline;
			margin-top: 24px;
		}

		.panel-total-text {
			text-align: left;
			color: #FFF;
			z-index: 2;
			text-transform: lowercase;
			font-size: 6em;
			font-weight: 200;
			margin-right: 3px;
		}

		.panel-total-text-sm {
			text-align: left;
			color: #FFF;
			z-index: 2;
			text-transform: lowercase;
			font-size: 1.6em;
		}

	}

	.panel-date {
		position: relative;
		z-index: 2;
		padding: 0 2px;
		font-weight: 600;
		text-transform: uppercase;
	}

	.panel-headline {
		position: relative;
		z-index: 2;
		margin: 0 0 25px;
		font-size: 4.5em;
		line-height: 1;
		transform: translate3d(0, 0, 0);
	}

	.panel-summary {
		position: relative;
		z-index: 2;
		font-size: convert-to-em(16px);
		line-height: 1.5;

		@include breakpoint-mediaquery(horizontal) {
			opacity: 0.5;
			transition: opacity $panel-expand-duration;

			.is-expanded & {
				opacity: 1;
			}
		}
	}

	.panel-cred {
		position: absolute;
		bottom: 106px;
		left: 0;
		z-index: 2;
		width: 100%;
		display: -webkit-flex;
		display: -ms-flexbox;
		display: -ms-flex;
		display: flex;
		-webkit-flex-direction: column;
		-ms-flex-direction: column;
		flex-direction: column;

		.panel-cred-row {
			display: -webkit-flex;
			display: -ms-flexbox;
			display: -ms-flex;
			display: flex;
			-webkit-flex-direction: row;
			-ms-flex-direction: row;
			flex-direction: row;
			-webkit-align-items: center;
			-ms-align-items: center;
			align-items: center;
			opacity: 0;
			transform: translateY(32px);
			transition-delay: 0.18s;
			transition: all $panel-expand-duration;

			&:first-child {
				transition-delay: 0.09s;
				margin-bottom: 12px;
			}

			.is-expanded & {
				opacity: 1;
				transform: translateY(0);
			}
		}

		.panel-cred-label, .panel-cred-input {
			font-size: 1.2em; 
		}

		.panel-cred-label {
			width: 32px;
		}

		.panel-cred-input {
			background-color: rgba(0, 0, 0, 0.23);
			border: none;
			padding: 3px;
			padding-left: 6px;
			outline: none;
			border-radius: 2px;
			// color: rgba(0, 0, 0, 0.46);
			color: white;

			&::selection {
			  background: rgba(0, 0, 0, 0.23); 
			}
			&::-moz-selection {
			  background: rgba(0, 0, 0, 0.23); 
			}
		}


		.is-expanded & {
			z-index: 4;
		}

		@include breakpoint-mediaquery(horizontal) {
			left: 40px;
		}
	}

	.panel-read {
		position: absolute;
		z-index: 2;
		bottom: 81px;
		left: 0;
		width: 100%;
		cursor: pointer;

		&:before,
		&:after {
			position: absolute;
			z-index: 1;
			top: 0;
			width: 50%;
			height: 81px;
			background-color: rgba(0, 0, 0, 0.23);
			transform: translate3d(0, 100%, 0);
			transition: transform $panel-expand-duration;

			.is-expanded & {
				transform: scaleX(1 + $panel-expand-scale) translate3d(0, 0, 0);
			}
		}

		.is-expanded & {
			z-index: 4;
		}

		&:before {
			left: 0;
			transform-origin: 100% 0;
		}

		&:after {
			left: 50%;
			transform-origin: 0 0;
		}

		.no-touch & {
			&:before,
			&:after {
				content: "";
			}
		}

		@include breakpoint-mediaquery(horizontal) {
			&:before {
				.is-shrunk-right & {
					transform: scaleX(1 - $panel-expand-scale) translate3d(0, 100%, 0);
				}
			}

			&:after {
				.is-shrunk-left & {
					transform: scaleX(1 - $panel-expand-scale) translate3d(0, 100%, 0);
				}
			}
		}
	}
	.panel-read-text {
		position: absolute;
		z-index: 2;
		top: 34px;
		left: 30px;
		width: 100%;
		font-weight: 600;
		padding-left: 32px;

		&:before {
			position: absolute;
			top: -1px;
			font-weight: normal;
			left: 0;
			font-family: 'nbc-icons';
			font-size: 14px;
			text-transform: none;
			content: "\e033";
		}

		@include breakpoint-mediaquery(horizontal) {
			left: 40px;
		}
	}
}

@mixin make-panel($width, $scale) {
	@include breakpoint-mediaquery(horizontal) {
		overflow: visible;
		width: $width;

		&.is-expanded {
			&:before,
			&:after {
				opacity: 0;
				transform: scaleX(1 + $scale) translate3d(0, 0, 0);
			}
		}

		&.is-shrunk-left {
			&:after {
				transform: scaleX(1 - $scale) translate3d(0, 0, 0);
			}

			.is-transition-topostfrompanels & {
				width: $width - ($width * $scale * 0.5);
				margin-right: $width * $scale * 0.5;
			}
		}

		&.is-shrunk-right {
			&:before {
				transform: scaleX(1 - $scale) translate3d(0, 0, 0);
			}

			.is-transition-topostfrompanels & {
				width: $width - ($width * $scale * 0.5);
				margin-left: $width * $scale * 0.5;

			}
		}
	}
	.panel-content {
		&:before,
		&:after {
			.is-expanded & {
				transform: scaleX(1 + $scale) translate3d(0, 0, 0);
			}
		}

		&:before {
			.is-shrunk-right & {
				transform: scaleX(1 - $scale) translate3d(0, 0, 0);
			}
		}

		&:after {
			.is-shrunk-left & {
				transform: scaleX(1 - $scale) translate3d(0, 0, 0);
			}
		}

		@include breakpoint-mediaquery(horizontal) {
			.is-transition-topostfrompanels .is-shrunk-left & {
				padding-right: 40px - ($width * $scale * 0.5);
			}

			.is-transition-topostfrompanels .is-shrunk-right & {
				padding-left: 40px - ($width * $scale * 0.5);
			}
		}


		.panel-read {
			&:before,
			&:after {
				.is-expanded & {
					transform: scaleX(1 + $scale) translate3d(0, 0, 0);
				}
			}

			@include breakpoint-mediaquery(horizontal) {
				&:before {
					.is-shrunk-right & {
						transform: scaleX(1 - $scale) translate3d(0, 100%, 0);
					}
				}

				&:after {
					.is-shrunk-left & {
						transform: scaleX(1 - $scale) translate3d(0, 100%, 0);
					}
				}
			}
		}
	}
}

// .panel {
// 	&--large {
// 		@include make-panel($panel-width--large, $panel-expand-scale--large);
// 	}

// 	&--larger {
// 		@include make-panel($panel-width--larger, $panel-expand-scale--larger);
// 	}

// 	&--largest {
// 		@include make-panel($panel-width--largest, $panel-expand-scale--largest);
// 	}

// }
